name: ci/cd

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Install qemu-user-static
        if: matrix.arch != 'amd64'
        run: |
          sudo apt-get update
          sudo apt-get install qemu-user-static
      - name: Lint and test in container
        run: podman build --platform linux/${{ matrix.arch }} --target test .

  publish:
    permissions:
      contents: read
      packages: write
    needs: test
    if: contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) && github.ref_name == 'main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Install qemu-user-static
        if: matrix.arch != 'amd64'
        run: |
          sudo apt-get update
          sudo apt-get install qemu-user-static
      - name: Get target image name
        id: image
        run: echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
      - name: Build image
        run: podman build --platform linux/${{ matrix.arch }} --tag ${{ steps.image.outputs.image_name }}:latest-${{ matrix.arch }} .
      - name: Push to ghcr.io
        run: podman push --creds=${{ github.actor }}:${{ github.token }} ${{ steps.image.outputs.image_name }}:latest-${{ matrix.arch }} ghcr.io/${{ steps.image.outputs.image_name }}:latest-${{ matrix.arch }}

  publish-multiarch:
    permissions:
      contents: read
      packages: write
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Get target image name
        id: image
        run: echo "image_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
      - name: Create manifest
        run: podman manifest create ${{ steps.image.outputs.image_name }}:latest
      - name: Add images to the manifest
        run: |
          podman manifest add ${{ steps.image.outputs.image_name }}:latest ghcr.io/${{ steps.image.outputs.image_name }}:latest-amd64
          podman manifest add ${{ steps.image.outputs.image_name }}:latest ghcr.io/${{ steps.image.outputs.image_name }}:latest-arm64
      - name: Push to ghcr.io
        run: podman manifest push --creds=${{ github.actor }}:${{ github.token }} ${{ steps.image.outputs.image_name }}:latest ghcr.io/${{ steps.image.outputs.image_name }}:latest
      - name: Delete old image versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 10
