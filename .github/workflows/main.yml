name: main

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Set up python 3.10
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Cache Poetry virtualenv
        id: virtualenv-cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: poetry-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: poetry-${{ steps.setup-python.outputs.python-version }}-
      - name: Install Poetry
        run: pipx install poetry
      - name: Setup the virtual environment
        run: |
          poetry config --local virtualenvs.in-project true
          poetry env use "$(which python)"
      - name: Install dependencies on a cache miss
        if: steps.virtualenv-cache.outputs.cache-hit != 'true'
        run: poetry install --remove-untracked
      - name: Check import order
        run: poetry run poe isort_check
      - name: Check formatting using black
        run: poetry run poe black_check
      - name: Test with mypy
        run: poetry run poe mypy
      - name: Test with pylint
        run: poetry run poe pylint
